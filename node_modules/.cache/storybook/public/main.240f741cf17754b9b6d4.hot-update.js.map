{"version":3,"file":"main.240f741cf17754b9b6d4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AAFA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://ui-kit/./src/stories/IconRIghtButton.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { IconRightButton, ButtonProps, ButtonSize, ButtonType } from '../IconRightButton/IconRightButton';\\nimport { ReactComponent as LargeIcon } from '../assets/largeIcon.svg';\\n\\n\\nexport default {\\n  title: 'IconRightButton',\\n  component: IconRightButton,\\n  argTypes: {\\n    color: {\\n      control: { type: 'color' },\\n    },\\n    size: {\\n      options: Object.values(ButtonSize),\\n      control: { type: 'select' },\\n    },\\n    variant: {\\n      options: Object.values(ButtonType),\\n      control: {\\n        type: 'inline-radio',\\n      },\\n    },\\n    disabled: {\\n      control: {\\n        type: 'boolean',\\n      },\\n    },\\n  },\\n  \\n} as ComponentMeta<typeof IconRightButton>;\\n\\nconst Template: ComponentStory<typeof IconRightButton> = (args) => <IconRightButton {...args}>\\n  {/* <LargeIcon /> */}\\n</IconRightButton>;\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n  children: \\\"Primary\\\",\\n  variant: ButtonType.primary,\\n};\\n\\nexport const PrimaryInverse = Template.bind({});\\nPrimaryInverse.args = {\\n  children: \\\"Primary Inverse\\\",\\n  variant: ButtonType.primaryInverse,\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n  children: \\\"Secondary\\\",\\n  variant: ButtonType.secondary,\\n};\\n\\nexport const Tertiary = Template.bind({});\\nTertiary.args = {\\n  children: \\\"Tertiary\\\",\\n  variant: ButtonType.tertiary,\\n};\\n\\nexport const Ghost = Template.bind({});\\nGhost.args = {\\n  children: \\\"Ghost\\\",\\n  variant: ButtonType.ghost,\\n};\\n\\nexport const Warning = Template.bind({});\\nWarning.args = {\\n  children: \\\"Warning\\\",\\n  variant: ButtonType.warning,\\n};\\n\\nexport const Skeleton = Template.bind({});\\nSkeleton.args = {\\n  children: \\\"Skeleton\\\",\\n  variant: ButtonType.skeleton,\\n};\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":57,\"line\":33},\"endLoc\":{\"col\":18,\"line\":35},\"startBody\":{\"col\":57,\"line\":33},\"endBody\":{\"col\":18,\"line\":35}},\"PrimaryInverse\":{\"startLoc\":{\"col\":57,\"line\":33},\"endLoc\":{\"col\":18,\"line\":35},\"startBody\":{\"col\":57,\"line\":33},\"endBody\":{\"col\":18,\"line\":35}},\"Secondary\":{\"startLoc\":{\"col\":57,\"line\":33},\"endLoc\":{\"col\":18,\"line\":35},\"startBody\":{\"col\":57,\"line\":33},\"endBody\":{\"col\":18,\"line\":35}},\"Tertiary\":{\"startLoc\":{\"col\":57,\"line\":33},\"endLoc\":{\"col\":18,\"line\":35},\"startBody\":{\"col\":57,\"line\":33},\"endBody\":{\"col\":18,\"line\":35}},\"Ghost\":{\"startLoc\":{\"col\":57,\"line\":33},\"endLoc\":{\"col\":18,\"line\":35},\"startBody\":{\"col\":57,\"line\":33},\"endBody\":{\"col\":18,\"line\":35}},\"Warning\":{\"startLoc\":{\"col\":57,\"line\":33},\"endLoc\":{\"col\":18,\"line\":35},\"startBody\":{\"col\":57,\"line\":33},\"endBody\":{\"col\":18,\"line\":35}},\"Skeleton\":{\"startLoc\":{\"col\":57,\"line\":33},\"endLoc\":{\"col\":18,\"line\":35},\"startBody\":{\"col\":57,\"line\":33},\"endBody\":{\"col\":18,\"line\":35}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { IconRightButton, ButtonProps, ButtonSize, ButtonType } from '../IconRightButton/IconRightButton';\nimport { ReactComponent as LargeIcon } from '../assets/largeIcon.svg';\n\n\nexport default {\n  title: 'IconRightButton',\n  component: IconRightButton,\n  argTypes: {\n    color: {\n      control: { type: 'color' },\n    },\n    size: {\n      options: Object.values(ButtonSize),\n      control: { type: 'select' },\n    },\n    variant: {\n      options: Object.values(ButtonType),\n      control: {\n        type: 'inline-radio',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n  },\n  \n} as ComponentMeta<typeof IconRightButton>;\n\nconst Template: ComponentStory<typeof IconRightButton> = (args) => <IconRightButton {...args}>\n  {/* <LargeIcon /> */}\n</IconRightButton>;\n\nexport const Primary = Template.bind({});;\nPrimary.args = {\n  children: \"Primary\",\n  variant: ButtonType.primary,\n};\n\nexport const PrimaryInverse = Template.bind({});;\nPrimaryInverse.args = {\n  children: \"Primary Inverse\",\n  variant: ButtonType.primaryInverse,\n};\n\nexport const Secondary = Template.bind({});;\nSecondary.args = {\n  children: \"Secondary\",\n  variant: ButtonType.secondary,\n};\n\nexport const Tertiary = Template.bind({});;\nTertiary.args = {\n  children: \"Tertiary\",\n  variant: ButtonType.tertiary,\n};\n\nexport const Ghost = Template.bind({});;\nGhost.args = {\n  children: \"Ghost\",\n  variant: ButtonType.ghost,\n};\n\nexport const Warning = Template.bind({});;\nWarning.args = {\n  children: \"Warning\",\n  variant: ButtonType.warning,\n};\n\nexport const Skeleton = Template.bind({});\nSkeleton.args = {\n  children: \"Skeleton\",\n  variant: ButtonType.skeleton,\n};\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <IconRightButton {...args}>\\n  {/* <LargeIcon /> */}\\n</IconRightButton>\" }, ...Primary.parameters };\nPrimaryInverse.parameters = { storySource: { source: \"(args) => <IconRightButton {...args}>\\n  {/* <LargeIcon /> */}\\n</IconRightButton>\" }, ...PrimaryInverse.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <IconRightButton {...args}>\\n  {/* <LargeIcon /> */}\\n</IconRightButton>\" }, ...Secondary.parameters };\nTertiary.parameters = { storySource: { source: \"(args) => <IconRightButton {...args}>\\n  {/* <LargeIcon /> */}\\n</IconRightButton>\" }, ...Tertiary.parameters };\nGhost.parameters = { storySource: { source: \"(args) => <IconRightButton {...args}>\\n  {/* <LargeIcon /> */}\\n</IconRightButton>\" }, ...Ghost.parameters };\nWarning.parameters = { storySource: { source: \"(args) => <IconRightButton {...args}>\\n  {/* <LargeIcon /> */}\\n</IconRightButton>\" }, ...Warning.parameters };\nSkeleton.parameters = { storySource: { source: \"(args) => <IconRightButton {...args}>\\n  {/* <LargeIcon /> */}\\n</IconRightButton>\" }, ...Skeleton.parameters };"],"names":[],"sourceRoot":""}