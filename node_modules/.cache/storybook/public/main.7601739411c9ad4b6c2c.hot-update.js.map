{"version":3,"file":"main.7601739411c9ad4b6c2c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAEA;AAIA;AAJA;AAAA;AAAA;AAAA;AAMA;AAQA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AA5DA;AA8DA","sources":["webpack://ui-kit/./src/Button/Button.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport \"./Button.css\";\n\nexport enum ButtonSize {\n  large = 'large',\n  small = 'small',\n  medium = 'medium',\n}\n\nexport enum ButtonType {\n  primary = 'primary',\n  primaryInverse = 'primaryInverse',\n  secondary = 'secondary',\n  tertiary = 'tertiary',\n  ghost = 'ghost',\n  warning = 'warning',\n  skeleton = 'skeleton',\n}\n\nexport interface ButtonProps {\n  color: string;\n  children: React.ReactNode;\n  size: ButtonSize;\n  variant: ButtonType;\n  disabled: boolean;\n}\n\nexport const Button: FC<ButtonProps> = ({ children, color, size, variant, disabled, ...props }) => {\n  const rootClasses = [\"button\"];\n  \n  \n  if (size === ButtonSize.small) {\n    rootClasses.push('small-btn')\n  }\n  if (size === ButtonSize.medium) {\n    rootClasses.push('medium-btn')\n  }\n  if (size === ButtonSize.large) {\n    rootClasses.push('large-btn')\n  }\n  if (variant === ButtonType.primary) {\n    rootClasses.push('primary')\n    if (disabled) {\n      rootClasses.push('primary-disabled')\n    }\n  }\n  if (variant === ButtonType.primaryInverse) {\n    rootClasses.push('primaryInverse')\n    if (disabled) {\n      rootClasses.push('primaryInverse-disabled')\n    }\n  }\n  if (variant === ButtonType.secondary) {\n    rootClasses.push('secondary')\n    if (disabled) {\n      rootClasses.push('secondary-disabled')\n    }\n  }\n  if (variant === ButtonType.tertiary) {\n    rootClasses.push('tertiary')\n    if (disabled) {\n      rootClasses.push('tertiary-disabled')\n    }\n  }\n  if (variant === ButtonType.ghost) {\n    rootClasses.push('ghost')\n    if (disabled) {\n      rootClasses.push('ghost-disabled')\n    }\n  }\n  if (variant === ButtonType.warning) {\n    rootClasses.push('warning')\n    if (disabled) {\n      rootClasses.push('warning-disabled')\n    }\n  }\n  if (variant === ButtonType.skeleton) {\n    rootClasses.push('skeleton')\n    if (disabled) {\n      rootClasses.push('skeleton-disabled')\n    }\n  }\n  return (\n    <button disabled={disabled} {...props} className={rootClasses.join(' ')} style={{}}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":[],"sourceRoot":""}